<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R quant analysis on R quant analysis</title>
    <link>/</link>
    <description>Recent content in R quant analysis on R quant analysis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tradeoff of Stop Losses</title>
      <link>/post/tradeoff-of-stop-losses/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tradeoff-of-stop-losses/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/plotlyjs/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/plotlyjs/plotly-latest.min.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;market-measures---july-10-2018&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Market Measures - July 10, 2018&lt;/h3&gt;
&lt;p&gt;The setup - Montly SPY 16 delta strangles, 45DTE, hold to expiration, 1-5x loss of credit recieved&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Stop losses are a popular strategy used by traders to achieve better performance by closing out of a losing trade.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;tastytrade ran a study where they compared managing 16 delta strangles in SPY, 45 DTE at expiration and 1x-5x credit received losses. They found that on average, stop losses hurt performance over the long run, because most of the trades you stopped out of eventually had a better P/L at expiration.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here I will recreate this study and extend it to include more underlyings to practice using the purrr package. This is the first attempt at recreating a Market Measure study and will be the basis of the tastytrade package on &lt;a href=&#34;https://github.com/themechanicalbear/tastytrade&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;setup-global-options-load-libraries&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Setup global options, load libraries:&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::opts_chunk$set(message = FALSE, tidy.opts = list(width.cutoff = 60)) 
suppressWarnings(suppressMessages(suppressPackageStartupMessages({
  library_list &amp;lt;- c(&amp;quot;tastytrade&amp;quot;, &amp;quot;dplyr&amp;quot;, &amp;quot;ggplot2&amp;quot;, &amp;quot;plotly&amp;quot;, &amp;quot;gridExtra&amp;quot;)
  lapply(library_list, require, character.only = TRUE)})))

stock_list &amp;lt;- c(&amp;quot;SPY&amp;quot;, &amp;quot;IWM&amp;quot;, &amp;quot;GLD&amp;quot;, &amp;quot;QQQ&amp;quot;, &amp;quot;DIA&amp;quot;, &amp;quot;TLT&amp;quot;, &amp;quot;XLE&amp;quot;, &amp;quot;EEM&amp;quot;,
                &amp;quot;MA&amp;quot;, &amp;quot;FB&amp;quot;, &amp;quot;FXI&amp;quot;, &amp;quot;SLV&amp;quot;, &amp;quot;EWZ&amp;quot;, &amp;quot;FXE&amp;quot;, &amp;quot;TBT&amp;quot;, &amp;quot;IBM&amp;quot;)
tar_dte &amp;lt;- 45
tar_delta_put &amp;lt;- -.16
tar_delta_call &amp;lt;- .16
all_loss_table &amp;lt;- data.frame()
all_results &amp;lt;- data.frame()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;study-function&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Study function&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;study &amp;lt;- function(stock) {
  options &amp;lt;- readRDS(paste0(here::here(), &amp;quot;/data/options/&amp;quot;, stock, &amp;quot;.RDS&amp;quot;)) %&amp;gt;%
    dplyr::mutate(mid = (bid + ask) / 2)
  monthly &amp;lt;- readRDS(paste0(here::here(), &amp;quot;/data/monthly.RDS&amp;quot;))
  
  options_filtered &amp;lt;- options %&amp;gt;%
    dplyr::filter(quotedate %in% monthly$date) %&amp;gt;%
    dplyr::mutate(m_dte = abs(dte - tar_dte))
  
  short_put_opens &amp;lt;- tastytrade::open_short_put(options_filtered, stock, 
                                                tar_delta_put)
  short_call_opens &amp;lt;- tastytrade::open_short_call(options_filtered, stock,
                                                  tar_delta_call)
  
  all_trades &amp;lt;- dplyr::full_join(short_call_opens, short_put_opens, 
                                 by = c(&amp;quot;quotedate&amp;quot;, &amp;quot;expiration&amp;quot;, &amp;quot;dte&amp;quot;)) %&amp;gt;%
    dplyr::mutate(credit = mid_put + mid_call)
  
  all_closes &amp;lt;- data.frame()
  
  possible_closes &amp;lt;- function(date, exp, c_strike, p_strike, credit) {
    closes &amp;lt;- options %&amp;gt;%
      dplyr::filter(quotedate &amp;gt; date,
                    quotedate &amp;lt;= exp,
                    expiration == exp) %&amp;gt;%
      dplyr::filter((strike == c_strike &amp;amp; type == &amp;quot;call&amp;quot;) |
                      (strike == p_strike &amp;amp; type == &amp;quot;put&amp;quot;)) %&amp;gt;%
      dplyr::group_by(quotedate) %&amp;gt;%
      dplyr::mutate(open_date = as.Date(date, origin = &amp;quot;1970-01-01&amp;quot;),
                    open_credit = credit,
                    debit = sum(mid),
                    profit = open_credit - debit,
                    loss_1_x = ifelse(debit &amp;gt;= 2 * credit, 1, 0),
                    loss_2_x = ifelse(debit &amp;gt;= 3 * credit, 1, 0),
                    loss_3_x = ifelse(debit &amp;gt;= 4 * credit, 1, 0),
                    loss_4_x = ifelse(debit &amp;gt;= 5 * credit, 1, 0),
                    loss_5_x = ifelse(debit &amp;gt;= 6 * credit, 1, 0)) %&amp;gt;%
      dplyr::ungroup() %&amp;gt;%
      dplyr::select(symbol, quotedate, expiration, open_date, open_credit,
                    debit, profit, loss_1_x, loss_2_x, loss_3_x, loss_4_x,
                    loss_5_x) %&amp;gt;%
      dplyr::distinct()
    
    all_closes &amp;lt;&amp;lt;- rbind(all_closes, closes)
  }
  
  invisible(purrr::pmap(list(all_trades$quotedate, all_trades$expiration,
                             all_trades$strike_call, all_trades$strike_put, 
                             all_trades$credit), possible_closes))
  
  invisible(purrr::pmap(list(df = list(all_closes), 
                             col_name = list(&amp;quot;loss_1_x&amp;quot;, &amp;quot;loss_2_x&amp;quot;, &amp;quot;loss_3_x&amp;quot;,
                                             &amp;quot;loss_4_x&amp;quot;, &amp;quot;loss_5_x&amp;quot;)),
                        tastytrade::stop_loss))
  
  expiration &amp;lt;- all_closes %&amp;gt;%
    dplyr::group_by(open_date) %&amp;gt;%
    dplyr::filter(quotedate == expiration) %&amp;gt;%
    dplyr::ungroup() %&amp;gt;%
    dplyr::arrange(quotedate) %&amp;gt;%
    dplyr::mutate(portfolio = cumsum(profit) * 100,
                  loss_type = &amp;quot;expiration&amp;quot;)
  
  symbol_results &amp;lt;- dplyr::bind_rows(loss_1_x, loss_2_x) %&amp;gt;%
    dplyr::bind_rows(loss_3_x) %&amp;gt;%
    dplyr::bind_rows(loss_4_x) %&amp;gt;%
    dplyr::bind_rows(loss_5_x) %&amp;gt;%
    dplyr::bind_rows(expiration)
  
  all_results &amp;lt;- rbind(all_results, symbol_results)
  assign(&amp;quot;all_results&amp;quot;, all_results, envir = .GlobalEnv)
  
  this_loss_table &amp;lt;- dplyr::bind_rows(loss_1_x, loss_2_x) %&amp;gt;%
    dplyr::bind_rows(loss_3_x) %&amp;gt;%
    dplyr::bind_rows(loss_4_x) %&amp;gt;%
    dplyr::bind_rows(loss_5_x) %&amp;gt;%
    dplyr::bind_rows(expiration) %&amp;gt;%
    dplyr::group_by(loss_type) %&amp;gt;%
    dplyr::filter(open_date == max(open_date)) %&amp;gt;%
    dplyr::ungroup() %&amp;gt;%
    dplyr::mutate(rank = rank(-portfolio)) %&amp;gt;%
    dplyr::select(symbol, loss_type, rank) %&amp;gt;%
    tidyr::spread(., key = loss_type, value = rank)
  
  all_loss_table &amp;lt;- rbind(all_loss_table, this_loss_table) 
  assign(&amp;quot;all_loss_table&amp;quot;, all_loss_table, envir = .GlobalEnv)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;run-the-study-with-purrrmap-on-each-symbol&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Run the study with purrr::map on each symbol&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;invisible(purrr::map(stock_list, study))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;group-returns-to-similar-portfolio-outcomes-and-split-so-the-plots-are-not-as-large&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Group returns to similar portfolio outcomes and split so the plots are not as large&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;group_one_returns &amp;lt;- all_results %&amp;gt;%
  dplyr::filter(symbol %in% c(&amp;quot;EWZ&amp;quot;, &amp;quot;TLT&amp;quot;, &amp;quot;SLV&amp;quot;, &amp;quot;FXI&amp;quot;, &amp;quot;XLE&amp;quot;, &amp;quot;EEM&amp;quot;, &amp;quot;FXE&amp;quot;))
group_two_returns &amp;lt;- all_results %&amp;gt;%
  dplyr::filter(symbol %in% c(&amp;quot;GLD&amp;quot;, &amp;quot;QQQ&amp;quot;, &amp;quot;DIA&amp;quot;, &amp;quot;IWM&amp;quot;, &amp;quot;IBM&amp;quot;, &amp;quot;SPY&amp;quot;, &amp;quot;MA&amp;quot;))

grouped_plot &amp;lt;- function(df) {
  ggplot(data = df, aes(x = quotedate, y = portfolio)) +
    geom_line(data = dplyr::filter(df, loss_type == &amp;quot;loss_1_x&amp;quot;), 
              aes(group = loss_type, color = &amp;quot;1X Stop&amp;quot;)) +
    geom_line(data = dplyr::filter(df, loss_type == &amp;quot;loss_2_x&amp;quot;),
              aes(color = &amp;quot;2X Stop&amp;quot;)) +
    geom_line(data = dplyr::filter(df, loss_type == &amp;quot;loss_3_x&amp;quot;),
              aes(color = &amp;quot;3X Stop&amp;quot;)) +
    geom_line(data = dplyr::filter(df, loss_type == &amp;quot;loss_4_x&amp;quot;),
              aes(color = &amp;quot;4X Stop&amp;quot;)) +
    geom_line(data = dplyr::filter(df, loss_type == &amp;quot;loss_5_x&amp;quot;),
              aes(color = &amp;quot;5X Stop&amp;quot;)) +
    geom_line(data = dplyr::filter(df, loss_type == &amp;quot;expiration&amp;quot;),
              aes(color = &amp;quot;expiration&amp;quot;)) +
    scale_fill_brewer() +
    theme_dark() + 
    labs(title = &amp;quot;Portfolio Total Return (by stop loss)&amp;quot;, x = &amp;quot;Trade Open Date&amp;quot;,
         y = &amp;quot;Portfolio Value&amp;quot;) +
    facet_grid(rows = vars(symbol), scales = &amp;quot;free_y&amp;quot;)
}

grouped_plot(group_one_returns)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-12-tradeoff-of-stop-loses_files/figure-html/ggplots-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grouped_plot(group_two_returns)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-12-tradeoff-of-stop-loses_files/figure-html/ggplots-2.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;this-heat-map-shows-the-outcomes-by-stop-loss-type-the-darker-the-color-the-better-the-outcome&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;This heat map shows the outcomes by stop loss type the darker the color the better the outcome&lt;/h4&gt;
&lt;p&gt;These are ranked from (1-6) 1 being best&lt;br /&gt;
On average holding to expiration performed best and stopping out too early performed the worst as seen in the mean total row at the top.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;heat_map_data &amp;lt;- all_loss_table %&amp;gt;%
  dplyr::bind_rows(summarise_all(., funs(if (is.numeric(.)) mean(.) else &amp;quot;Mean Total&amp;quot;))) %&amp;gt;%
  tibble::remove_rownames(.) %&amp;gt;%
  tibble::column_to_rownames(var = &amp;quot;symbol&amp;quot;)
heat_map_data &amp;lt;- as.matrix(heat_map_data)

plot_ly(x = colnames(heat_map_data), y = rownames(heat_map_data), 
        z = heat_map_data, type = &amp;quot;heatmap&amp;quot;, 
        colors = colorRamp(c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;9890250956c5&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;9890250956c5&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;9890564e2797&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;9890564e2797&#34;,&#34;attrs&#34;:{&#34;9890564e2797&#34;:{&#34;x&#34;:[&#34;expiration&#34;,&#34;loss_1_x&#34;,&#34;loss_2_x&#34;,&#34;loss_3_x&#34;,&#34;loss_4_x&#34;,&#34;loss_5_x&#34;],&#34;y&#34;:[&#34;SPY&#34;,&#34;IWM&#34;,&#34;GLD&#34;,&#34;QQQ&#34;,&#34;DIA&#34;,&#34;TLT&#34;,&#34;XLE&#34;,&#34;EEM&#34;,&#34;MA&#34;,&#34;FB&#34;,&#34;FXI&#34;,&#34;SLV&#34;,&#34;EWZ&#34;,&#34;FXE&#34;,&#34;TBT&#34;,&#34;IBM&#34;,&#34;Mean Total&#34;],&#34;z&#34;:[[1,6,3,4,5,2],[3,6,5,4,2,1],[2,6,3,1,4,5],[1,6,5,4,3,2],[1,6,3,4,5,2],[3,1,5,6,2,4],[2,5,6,4,1,3],[1.5,5,6,3,4,1.5],[1,6,5,4,3,2],[3,5,6,4,1.5,1.5],[1,2,5,6,3,4],[1,5,6,4,2,3],[4,2,1,3,5,6],[2,4,3,6,5,1],[5,1,3,6,2,4],[2,6,3,5,4,1],[2.09375,4.5,4.25,4.25,3.21875,2.6875]],&#34;colors&#34;:[&#34;function (x) &#34;,&#34;roundcolor(cbind(palette[[1L]](x), palette[[2L]](x), palette[[3L]](x), &#34;,&#34;    if (alpha) palette[[4L]](x))) * 255&#34;],&#34;alpha&#34;:1,&#34;sizes&#34;:[10,100],&#34;type&#34;:&#34;heatmap&#34;}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1]},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1]},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:false,&#34;legend&#34;:{&#34;y&#34;:0.5,&#34;yanchor&#34;:&#34;top&#34;}},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;data&#34;:[{&#34;colorbar&#34;:{&#34;title&#34;:&#34;&#34;,&#34;ticklen&#34;:2,&#34;len&#34;:0.5,&#34;y&#34;:1,&#34;lenmode&#34;:&#34;fraction&#34;,&#34;yanchor&#34;:&#34;top&#34;},&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(255,0,0,1)&#34;],[&#34;0.1&#34;,&#34;rgba(255,25,0,1)&#34;],[&#34;0.2&#34;,&#34;rgba(255,51,0,1)&#34;],[&#34;0.379166666666667&#34;,&#34;rgba(255,96,0,1)&#34;],[&#34;0.4&#34;,&#34;rgba(255,102,0,1)&#34;],[&#34;0.521875&#34;,&#34;rgba(255,133,0,1)&#34;],[&#34;0.6&#34;,&#34;rgba(255,153,0,1)&#34;],[&#34;0.65&#34;,&#34;rgba(255,165,0,1)&#34;],[&#34;0.8&#34;,&#34;rgba(255,204,0,1)&#34;],[&#34;1&#34;,&#34;rgba(255,255,0,1)&#34;]],&#34;showscale&#34;:true,&#34;x&#34;:[&#34;expiration&#34;,&#34;loss_1_x&#34;,&#34;loss_2_x&#34;,&#34;loss_3_x&#34;,&#34;loss_4_x&#34;,&#34;loss_5_x&#34;],&#34;y&#34;:[&#34;SPY&#34;,&#34;IWM&#34;,&#34;GLD&#34;,&#34;QQQ&#34;,&#34;DIA&#34;,&#34;TLT&#34;,&#34;XLE&#34;,&#34;EEM&#34;,&#34;MA&#34;,&#34;FB&#34;,&#34;FXI&#34;,&#34;SLV&#34;,&#34;EWZ&#34;,&#34;FXE&#34;,&#34;TBT&#34;,&#34;IBM&#34;,&#34;Mean Total&#34;],&#34;z&#34;:[[1,6,3,4,5,2],[3,6,5,4,2,1],[2,6,3,1,4,5],[1,6,5,4,3,2],[1,6,3,4,5,2],[3,1,5,6,2,4],[2,5,6,4,1,3],[1.5,5,6,3,4,1.5],[1,6,5,4,3,2],[3,5,6,4,1.5,1.5],[1,2,5,6,3,4],[1,5,6,4,2,3],[4,2,1,3,5,6],[2,4,3,6,5,1],[5,1,3,6,2,4],[2,6,3,5,4,1],[2.09375,4.5,4.25,4.25,3.21875,2.6875]],&#34;type&#34;:&#34;heatmap&#34;,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1}},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x) { var ctConfig = crosstalk.var(&#39;plotlyCrosstalkOpts&#39;).set({\&#34;on\&#34;:\&#34;plotly_click\&#34;,\&#34;persistent\&#34;:false,\&#34;dynamic\&#34;:false,\&#34;selectize\&#34;:false,\&#34;opacityDim\&#34;:0.2,\&#34;selected\&#34;:{\&#34;opacity\&#34;:1}}); }&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Historical /VX data and Contango</title>
      <link>/post/historical-vx-data-and-contango/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/historical-vx-data-and-contango/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://cfe.cboe.com/market-data/historical-data&#34; target=&#34;_blank&#34;&gt;CBOE&lt;/a&gt; site makes historical data available for personal use and this post describes a method
for gathering and processing this data for analysis.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id=&#34;setup-global-option-load-libraries&#34;&gt;Setup global option, load libraries:&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;knitr::opts_chunk$set(message = FALSE, tidy.opts = list(width.cutoff = 60)) 
suppressWarnings(suppressMessages(suppressPackageStartupMessages({
  library_list &amp;lt;- c(&amp;quot;xml2&amp;quot;, &amp;quot;rvest&amp;quot;, &amp;quot;stringr&amp;quot;, &amp;quot;dplyr&amp;quot;, &amp;quot;tidyr&amp;quot;, &amp;quot;utils&amp;quot;, &amp;quot;ggplot2&amp;quot;,
                    &amp;quot;purrr&amp;quot;, &amp;quot;lubridate&amp;quot;, &amp;quot;stats&amp;quot;, &amp;quot;zoo&amp;quot;, &amp;quot;knitr&amp;quot;, &amp;quot;kableExtra&amp;quot;)
  lapply(library_list, require, character.only = TRUE)})))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;gathering-the-data-from-cboe-site&#34;&gt;Gathering the data from CBOE site&lt;/h4&gt;

&lt;p&gt;VX - Cboe S&amp;amp;P 500 Volatility Index (VIX) Futures Price and Volume Detail:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;url &amp;lt;- &amp;quot;http://cfe.cboe.com/market-data/historical-data&amp;quot;
regex_vx &amp;lt;- &amp;quot;CFE_[A-Z]{1}[0-9]{2}_(VX){1}(\\.){1}(csv){1}&amp;quot; # REGEX for VX files on site
page &amp;lt;- xml2::read_html(url)

file_paths &amp;lt;- page %&amp;gt;%
  rvest::html_nodes(&amp;quot;a&amp;quot;) %&amp;gt;%       # find all links
  rvest::html_attr(&amp;quot;href&amp;quot;) %&amp;gt;%     # get the url
  stringr::str_subset(&amp;quot;\\.csv&amp;quot;)    # all csv files
  
file_paths &amp;lt;- as.data.frame(file_paths) %&amp;gt;%
  dplyr::mutate(web_url = &amp;quot;http://cfe.cboe.com&amp;quot;,
                link = paste0(web_url, file_paths)) %&amp;gt;%
  tidyr::separate(file_paths, into = c(&amp;quot;blank&amp;quot;, &amp;quot;Publish&amp;quot;, &amp;quot;ScheduledTask&amp;quot;, &amp;quot;MktData&amp;quot;, 
                                       &amp;quot;datahouse&amp;quot;, &amp;quot;file_name&amp;quot;), sep = &amp;quot;/&amp;quot;) %&amp;gt;%
  dplyr::select(file_name, link) %&amp;gt;%
  dplyr::filter(grepl(regex_vx, link))

#mapply(utils::download.file, url = file_paths$link, destfile = file_paths$file_name)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;data-processing&#34;&gt;Data Processing&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Bind files&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Split contract name into year, month, contract symbol&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Calculate contango as % of front month - back month / front month settle&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Add front month and back month as new columns for clarity and future use in analysis&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;vx_files = as.data.frame(list.files(pattern = regex_vx), stringsAsFactors = FALSE) %&amp;gt;%
  stats::setNames(., &amp;quot;file_name&amp;quot;)

vx_data &amp;lt;- purrr::map_df(vx_files$file_name, utils::read.table, blank.lines.skip = TRUE,
                         fill = TRUE, header = FALSE, quote = &#39;&#39;, sep = &amp;quot;,&amp;quot;,
                         stringsAsFactors = FALSE) %&amp;gt;%
  dplyr::select(1:11) %&amp;gt;% 
  stats::setNames(., c(&amp;quot;quote_date&amp;quot;, &amp;quot;contract&amp;quot;, &amp;quot;open&amp;quot;, &amp;quot;high&amp;quot;, &amp;quot;low&amp;quot;, &amp;quot;close&amp;quot;,
                       &amp;quot;settle&amp;quot;, &amp;quot;change&amp;quot;, &amp;quot;volume&amp;quot;, &amp;quot;efp&amp;quot;, &amp;quot;open_interest&amp;quot;)) %&amp;gt;%
  dplyr::filter(!grepl(&amp;quot;Trade&amp;quot;, quote_date),
                !grepl(&amp;quot;CFE&amp;quot;, quote_date)) %&amp;gt;%
  dplyr::mutate(quote_date = as.Date(quote_date, format = &amp;quot;%m/%d/%Y&amp;quot;),
                contract = gsub(&amp;quot;\\(&amp;quot;, &amp;quot;&amp;quot;, contract),
                contract = gsub(&amp;quot;\\)&amp;quot;, &amp;quot;&amp;quot;, contract)) %&amp;gt;%
  tidyr::separate(contract, c(&amp;quot;contract&amp;quot;, &amp;quot;month&amp;quot;, &amp;quot;year&amp;quot;), sep = &amp;quot; &amp;quot;) %&amp;gt;%
  dplyr::mutate(month = zoo::as.yearmon(month, &amp;quot;%b&amp;quot;),
                month = lubridate::month(month),
                year = paste0(&amp;quot;20&amp;quot;, year)) %&amp;gt;%
  dplyr::mutate_at(vars(4:13), funs(as.numeric)) %&amp;gt;%
  dplyr::group_by(quote_date) %&amp;gt;%
  dplyr::arrange(year, month) %&amp;gt;%
  dplyr::mutate(# diff each monthly contract settlement
                contango = c(NA, diff(settle)), 
                # shift forward a month
                diff_month = dplyr::lead(contango, 1), 
                # distribute the value across all months
                diff_front_back = dplyr::nth(diff_month, 1), 
                contango_perc = round(100 * (diff_front_back / dplyr::first(settle)),
                                      digits = 2),
                front_month = dplyr::nth(settle, 1),
                back_month = dplyr::nth(settle, 2)) %&amp;gt;%
  # Filter to the front month row since we are interested in M1/M2 contango
  dplyr::filter(row_number() == 1) %&amp;gt;% 
  dplyr::ungroup() %&amp;gt;%
  dplyr::select(-c(efp, contango))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;output-recent-dates-and-summary-statistics&#34;&gt;Output recent dates and summary statistics&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;knitr::kable(tail(vx_data[ , c(1, 15:17)]))
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; quote_date &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; contango_perc &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; front_month &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; back_month &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 2018-02-08 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; -22.95 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 28.100 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 21.650 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 2018-02-09 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; -24.84 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 27.175 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 20.425 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 2018-02-12 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; -23.23 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 25.825 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 19.825 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 2018-02-13 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; -21.41 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 25.225 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 19.825 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 2018-02-14 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; -18.27 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 21.870 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 17.875 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 2018-02-15 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; -1.14 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 17.525 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 17.325 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(vx_data)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##    quote_date           contract             month             year     
##  Min.   :2004-03-26   Length:3498        Min.   : 1.000   Min.   :2004  
##  1st Qu.:2007-09-17   Class :character   1st Qu.: 4.000   1st Qu.:2007  
##  Median :2011-03-07   Mode  :character   Median : 7.000   Median :2011  
##  Mean   :2011-03-07                      Mean   : 6.566   Mean   :2011  
##  3rd Qu.:2014-08-26                      3rd Qu.:10.000   3rd Qu.:2014  
##  Max.   :2018-02-15                      Max.   :12.000   Max.   :2018  
##                                                                         
##       open             high             low             close       
##  Min.   :  0.00   Min.   :  0.00   Min.   :  0.00   Min.   :  0.00  
##  1st Qu.: 14.95   1st Qu.: 15.40   1st Qu.: 14.55   1st Qu.: 14.90  
##  Median : 20.09   Median : 20.80   Median : 19.50   Median : 20.00  
##  Mean   : 44.25   Mean   : 45.18   Mean   : 43.31   Mean   : 44.13  
##  3rd Qu.: 36.05   3rd Qu.: 37.25   3rd Qu.: 34.10   3rd Qu.: 35.79  
##  Max.   :212.40   Max.   :225.80   Max.   :206.00   Max.   :215.50  
##  NA&#39;s   :1        NA&#39;s   :1        NA&#39;s   :1        NA&#39;s   :1       
##      settle           change              volume         open_interest   
##  Min.   :  8.75   Min.   :-119.9200   Min.   :     0.0   Min.   :   113  
##  1st Qu.: 15.33   1st Qu.:  -0.7000   1st Qu.:   814.8   1st Qu.: 10882  
##  Median : 20.80   Median :  -0.1500   Median :  9991.5   Median : 37320  
##  Mean   : 46.02   Mean   :  -0.1934   Mean   : 39860.8   Mean   : 70475  
##  3rd Qu.: 41.36   3rd Qu.:   0.4500   3rd Qu.: 69188.5   3rd Qu.:119694  
##  Max.   :216.20   Max.   :  33.7000   Max.   :567407.0   Max.   :372068  
##                                                                          
##    diff_month       diff_front_back    contango_perc       front_month    
##  Min.   :-191.700   Min.   :-191.700   Min.   :-100.000   Min.   :  8.75  
##  1st Qu.:   0.500   1st Qu.:   0.500   1st Qu.:   2.300   1st Qu.: 15.33  
##  Median :   1.350   Median :   1.350   Median :   6.720   Median : 20.80  
##  Mean   :   2.391   Mean   :   2.391   Mean   :   5.856   Mean   : 46.02  
##  3rd Qu.:   2.650   3rd Qu.:   2.650   3rd Qu.:  10.520   3rd Qu.: 41.36  
##  Max.   :  56.060   Max.   :  56.060   Max.   :  42.680   Max.   :216.20  
##                                                                           
##    back_month    
##  Min.   :  0.00  
##  1st Qu.: 16.38  
##  Median : 21.80  
##  Mean   : 48.41  
##  3rd Qu.: 38.09  
##  Max.   :206.70  
## 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;the-following-details-should-be-reviewed-prior-to-using-the-data-for-further-analysis&#34;&gt;The following details should be reviewed prior to using the data for further analysis.&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The summary statistics reveal 1 record that is missing the daily pricing details
(open, high, low, close)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;125 records have an (open, high, low, or close) value equal to 0&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;9 records between 2004-2006 have a contango % of -100%&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;plotting-the-distribution-of-the-contango&#34;&gt;Plotting the distribution of the contango %&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;shows a normal distibution&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;including the outlier -100% data points&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = vx_data, aes(contango_perc)) + 
  geom_histogram(breaks = seq(-100, 50, by = 2), 
                 col = &amp;quot;black&amp;quot;, 
                 fill = &amp;quot;grey&amp;quot;, 
                 alpha = .2) + 
  labs(title = &amp;quot;Histogram for Contango %&amp;quot;) +
  labs(x = &amp;quot;Contango %&amp;quot;, y = &amp;quot;Count&amp;quot;) + 
  xlim(c(-100, 50)) + 
  ylim(c(0, 550))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/2018-02-20-historical-vx-data-and-contango_files/figure-html/plot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;save-results&#34;&gt;Save Results&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;saveRDS(vx_data, file = paste0(&amp;quot;vx_data_&amp;quot;, Sys.Date(), &amp;quot;.RDS&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>TBD Meetup</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0700</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
